{"version":3,"sources":["Components/StockData.js","Components/StockChart.js","Components/Form.js","Components/NavBar.js","Components/News.js","Components/StockTitle.js","Components/ModeChange.js","Components/Footer.js","Components/Enter.js","Components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["makeNumNormal","labelValue","Math","abs","Number","round","StockData","props","id","name","className","mode","open","dayHigh","dayLow","pe","eps","mktCap","yearHigh","yearLow","avgVol","symbol","toggle","widgetType","TECHNICAL_ANALYSIS","widgetConfig","StockChart","MARKET_OVERVIEW","Form","onSubmit","getTicker","type","placeholder","navOn","display","navOff","Navbar","state","navState","navToggler","React","createRef","navToggle","bind","this","setState","console","log","href","onClick","ref","for","src","style","Component","News","source1","source","url","target","title","description","url1","title1","description1","url2","source2","title2","description2","url3","source3","title3","description3","url4","source4","title4","description4","StockTitle","price","closeYesterday","daychange","changepct","ModeChanger","onChange","changeMode","modeChanger","Footer","TICKER_TAPE","Enter","error","undefined","Profile","COMPANY_PROFILE","App","exchange","image","image1","image2","image3","image4","bg","backgroundColor","e","a","preventDefault","ticker","elements","value","fetch","api_call","api_call2","json","data","data2","content","articles","urlToImage","checked","background","ModeChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c72531d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { TradingViewEmbed, widgetType } from \"react-tradingview-embed\";\r\n\r\n\r\nconst makeNumNormal = (labelValue) => {\r\n    // Nine Zeroes for Billions\r\n    return Math.abs(Number(labelValue)) >= 1.0e+9\r\n    ? Math.round(Math.abs(Number(labelValue)) / 1.0e+9 *10 )/10 + \"B\"\r\n    // Six Zeroes for Millions \r\n    : Math.abs(Number(labelValue)) >= 1.0e+6\r\n    ? Math.round(Math.abs(Number(labelValue)) / 1.0e+6 * 10)/10 + \"M\"\r\n    // Three Zeroes for Thousands\r\n    : Math.abs(Number(labelValue)) >= 1.0e+3\r\n    ? Math.round(Math.abs(Number(labelValue)) / 1.0e+3 *10)/10 + \"K\"\r\n    : Math.abs(Number(labelValue));\r\n}\r\n\r\nconst StockData = (props) => (\r\n\r\n    <div id=\"info\">\r\n        {props.name &&\r\n        <div className=\"stock-data\">\r\n            <div className={\"stock-data-text-\"+props.mode} id=\"stock-data-text\">\r\n                <p> Open </p>\r\n                <p> High </p>\r\n                <p> Low </p>\r\n            </div>\r\n\r\n\r\n            <div className={\"stock-data-values-\"+props.mode} id=\"stock-data-values\">\r\n                <p> {props.open} </p>\r\n                <p> {props.dayHigh} </p>\r\n                <p> {props.dayLow} </p>\r\n            </div>\r\n\r\n            <div className={\"stock-data-border-\"+props.mode} id=\"stock-data-border\" />\r\n\r\n            <div className={\"stock-data-text-\"+props.mode} id=\"stock-data-text\">\r\n                <p> P/E </p>\r\n                <p> EPS </p>\r\n                <p> Mkt Cap </p>\r\n            </div>\r\n\r\n            <div className={\"stock-data-values-\"+props.mode} id=\"stock-data-values\">\r\n                <p> {props.pe} </p>\r\n                <p> {props.eps} </p>\r\n                <p> {makeNumNormal(props.mktCap)} </p>\r\n            </div>\r\n\r\n            <div className='border-wrapper'>\r\n                <div className={\"stock-data-border-\"+props.mode} id=\"stock-data-border\"/>\r\n            </div>\r\n\r\n            <div className={\"stock-data-text-\"+props.mode} id=\"stock-data-text\">\r\n                <p> 52 Wk H</p>\r\n                <p> 52 Wk L</p>\r\n                <p> Avg Vol </p>\r\n            </div>\r\n\r\n            <div className={\"stock-data-values-\"+props.mode} id=\"stock-data-values\">\r\n                <p> {props.yearHigh} </p>\r\n                <p> {props.yearLow} </p>\r\n                <p> {makeNumNormal(props.avgVol)} </p>\r\n            </div>\r\n\r\n            <div className={\"stock-data-border-\"+props.mode} id=\"stock-data-border\"/>\r\n\r\n\r\n            <div id=\"technical-analysis\" className=\"technical-analysis\">\r\n                {props.symbol &&\r\n                <div>\r\n\r\n                    {props.toggle === \"Y\" ?\r\n                    <div className='technical-analysis-widget'>\r\n                        {props.mode === 'light' &&\r\n                        <TradingViewEmbed\r\n                        widgetType={widgetType.TECHNICAL_ANALYSIS}\r\n                        widgetConfig={\r\n                            {\r\n                                \"interval\": \"1M\",\r\n                                \"width\": \"100%\",\r\n                                \"colorTheme\": \"light\",\r\n                                \"isTransparent\": true,\r\n                                \"height\": \"400\",\r\n                                \"symbol\": props.symbol,\r\n                                \"showIntervalTabs\": true,\r\n                                \"locale\": \"en\"\r\n                            }\r\n                        }\r\n                        />\r\n                    }\r\n                    {props.mode === 'dark' &&\r\n                        <TradingViewEmbed\r\n                        widgetType={widgetType.TECHNICAL_ANALYSIS}\r\n                        widgetConfig={\r\n                            {\r\n                                \"interval\": \"1M\",\r\n                                \"width\": \"100%\",\r\n                                \"colorTheme\": \"dark\",\r\n                                \"isTransparent\": true,\r\n                                \"height\": \"400\",\r\n                                \"symbol\": props.symbol,\r\n                                \"showIntervalTabs\": true,\r\n                                \"locale\": \"en\"\r\n                            }\r\n                        }\r\n                        />\r\n                    }\r\n                    </div>: <div/>\r\n                    } \r\n\r\n                    {props.toggle === \"N\" ?\r\n                    <div className='technical-analysis-widget'>\r\n                        {props.mode === 'light' &&\r\n                        <TradingViewEmbed\r\n                        widgetType={widgetType.TECHNICAL_ANALYSIS}\r\n                        widgetConfig={\r\n                            {\r\n                                \"interval\": \"1M\",\r\n                                \"width\": \"100%\",\r\n                                \"colorTheme\": \"light\",\r\n                                \"isTransparent\": true,\r\n                                \"height\": \"400\",\r\n                                \"symbol\": props.symbol,\r\n                                \"showIntervalTabs\": true,\r\n                                \"locale\": \"en\"\r\n                            }\r\n                        }\r\n                        />\r\n                    }\r\n                    {props.mode === 'dark' &&\r\n                        <TradingViewEmbed\r\n                        widgetType={widgetType.TECHNICAL_ANALYSIS}\r\n                        widgetConfig={\r\n                            {\r\n                                \"interval\": \"1M\",\r\n                                \"width\": \"100%\",\r\n                                \"colorTheme\": \"dark\",\r\n                                \"isTransparent\": true,\r\n                                \"height\": \"400\",\r\n                                \"symbol\": props.symbol,\r\n                                \"showIntervalTabs\": true,\r\n                                \"locale\": \"en\"\r\n                            }\r\n                        }\r\n                        />\r\n                    }\r\n                    </div>: <div/>\r\n                    } \r\n                </div>\r\n                } \r\n            </div>\r\n        </div>\r\n\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n)\r\n\r\n\r\n/*\r\n\r\nclass StockData extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='info'>\r\n            {this.props.name && <h2 className=\"section-title\" id={'section-title-'+this.props.mode}>Company Information </h2>}\r\n\r\n\r\n                <div className=\"stock-key-container\">\r\n                    <div>\r\n                        {this.props.name &&    \r\n                        <div>\r\n                            <div className=\"stock-key\" id={'stock-key-'+this.props.mode}>\r\n                                <p> Company: { this.props.name } </p> \r\n                                <p> Price: ${ this.props.price} </p> \r\n                                <p> PE: {this.props.pe}</p>\r\n                                <p> 52 Week High: {this.props.yearHigh}</p>\r\n                                <p> 52 Week Low: {this.props.yearLow}</p>\r\n                                <p> Exchange: {this.props.exchange}</p>\r\n                                <p> {this.props.error} </p> \r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\n*/\r\n\r\n\r\nexport default StockData;","import React from 'react';\r\n\r\n\r\nimport { TradingViewEmbed, widgetType } from \"react-tradingview-embed\";\r\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nclass StockChart extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this._ref = React.createRef();\r\n  }\r\n\r\n\r\n  getChartData() {\r\n    const symbolString = String(this.props.symbol)\r\n    return (\r\n      JSON.stringify({\r\n        \"colorTheme\": 'light',\r\n        \"dateRange\": \"1d\",\r\n        \"showChart\": true,\r\n        \"locale\": \"en\",\r\n        \"largeChartUrl\": \"\",\r\n        \"isTransparent\": true,\r\n        \"width\": \"100%\",\r\n        \"height\": \"400\",\r\n        \"plotLineColorGrowing\": \"rgb(47, 196, 141)\",\r\n        \"plotLineColorFalling\": \"rgb(229, 64, 18)\",\r\n        \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n        \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n        \"belowLineFillColorGrowing\": \"rgba(87, 243, 144, 0.12)\",\r\n        \"belowLineFillColorFalling\": \"rgba(243, 15, 15, 0.12)\",\r\n        \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n        \"tabs\": [\r\n          {\r\n            \"title\": \"Stocks\",\r\n            \"symbols\": [\r\n              {\r\n                \"s\": \"BABA\"\r\n              }\r\n            ],\r\n          }\r\n        ]\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chart-widget\" ref={this._ref}>\r\n      <div class=\"tradingview-widget-container__widget\"></div>\r\n\r\n  </div>\r\n\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js'\r\n    script.async = true;\r\n    script.innerHTML = this.getChartData()\r\n\r\n    this._ref.current.appendChild(script);\r\n  }\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\nconst StockChart = (props) => (\r\n\r\n  <div id=\"chart\" >\r\n\r\n    <div>\r\n      {props.symbol &&\r\n        <div>\r\n          {props.toggle === \"Y\" ?\r\n            <div className='chart-widget'>\r\n              {props.mode === 'light' &&\r\n              <TradingViewEmbed\r\n                widgetType={widgetType.MARKET_OVERVIEW}\r\n                widgetConfig={\r\n                {\r\n                  \"colorTheme\": 'light',\r\n                  \"dateRange\": \"1d\",\r\n                  \"showChart\": true,\r\n                  \"locale\": \"en\",\r\n                  \"largeChartUrl\": \"\",\r\n                  \"isTransparent\": true,\r\n                  \"width\": \"100%\",\r\n                  \"height\": \"400\",\r\n                  \"plotLineColorGrowing\": \"rgb(47, 196, 141)\",\r\n                  \"plotLineColorFalling\": \"rgb(229, 64, 18)\",\r\n                  \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n                  \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n                  \"belowLineFillColorGrowing\": \"rgba(87, 243, 144, 0.12)\",\r\n                  \"belowLineFillColorFalling\": \"rgba(243, 15, 15, 0.12)\",\r\n                  \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n                  \"tabs\": [\r\n                    {\r\n                      \"title\": \"Stocks\",\r\n                      \"symbols\": [\r\n                        {\r\n                          \"s\": props.symbol\r\n                        }\r\n                      ],\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n              />\r\n            }\r\n            {props.mode === 'dark' &&\r\n              <TradingViewEmbed\r\n                widgetType={widgetType.MARKET_OVERVIEW}\r\n                widgetConfig={\r\n                {\r\n                  \"colorTheme\": 'dark',\r\n                  \"dateRange\": \"1d\",\r\n                  \"showChart\": true,\r\n                  \"locale\": \"en\",\r\n                  \"largeChartUrl\": \"\",\r\n                  \"isTransparent\": true,\r\n                  \"width\": \"100%\",\r\n                  \"height\": \"400\",\r\n                  \"plotLineColorGrowing\": \"rgb(47, 196, 141)\",\r\n                  \"plotLineColorFalling\": \"rgb(229, 64, 18)\",\r\n                  \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n                  \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n                  \"belowLineFillColorGrowing\": \"rgba(87, 243, 144, 0.12)\",\r\n                  \"belowLineFillColorFalling\": \"rgba(243, 15, 15, 0.12)\",\r\n                  \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n                  \"tabs\": [\r\n                    {\r\n                      \"title\": \"Stocks\",\r\n                      \"symbols\": [\r\n                        {\r\n                          \"s\": props.symbol\r\n                        }\r\n                      ],\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n              />\r\n            }\r\n            </div> : <div/>\r\n          } \r\n\r\n          {props.toggle === \"N\" ?\r\n            <div className='chart-widget'>\r\n              {props.mode === 'light' &&\r\n              <TradingViewEmbed\r\n                widgetType={widgetType.MARKET_OVERVIEW}\r\n                widgetConfig={\r\n                {\r\n                  \"colorTheme\": 'light',\r\n                  \"dateRange\": \"1d\",\r\n                  \"showChart\": true,\r\n                  \"locale\": \"en\",\r\n                  \"largeChartUrl\": \"\",\r\n                  \"isTransparent\": true,\r\n                  \"width\": \"100%\",\r\n                  \"height\": \"400\",\r\n                  \"plotLineColorGrowing\": \"rgb(47, 196, 141)\",\r\n                  \"plotLineColorFalling\": \"rgb(229, 64, 18)\",\r\n                  \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n                  \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n                  \"belowLineFillColorGrowing\": \"rgba(87, 243, 144, 0.12)\",\r\n                  \"belowLineFillColorFalling\": \"rgba(243, 15, 15, 0.12)\",\r\n                  \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n                  \"tabs\": [\r\n                    {\r\n                      \"title\": \"Stocks\",\r\n                      \"symbols\": [\r\n                        {\r\n                          \"s\": props.symbol\r\n                        }\r\n                      ],\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n              />\r\n            }\r\n            {props.mode === 'dark' &&\r\n              <TradingViewEmbed\r\n                widgetType={widgetType.MARKET_OVERVIEW}\r\n                widgetConfig={\r\n                {\r\n                  \"colorTheme\": 'dark',\r\n                  \"dateRange\": \"1d\",\r\n                  \"showChart\": true,\r\n                  \"locale\": \"en\",\r\n                  \"largeChartUrl\": \"\",\r\n                  \"isTransparent\": true,\r\n                  \"width\": \"100%\",\r\n                  \"height\": \"400\",\r\n                  \"plotLineColorGrowing\": \"rgb(47, 196, 141)\",\r\n                  \"plotLineColorFalling\": \"rgb(229, 64, 18)\",\r\n                  \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n                  \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n                  \"belowLineFillColorGrowing\": \"rgba(87, 243, 144, 0.12)\",\r\n                  \"belowLineFillColorFalling\": \"rgba(243, 15, 15, 0.12)\",\r\n                  \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n                  \"tabs\": [\r\n                    {\r\n                      \"title\": \"Stocks\",\r\n                      \"symbols\": [\r\n                        {\r\n                          \"s\": props.symbol\r\n                        }\r\n                      ],\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n              />\r\n            }\r\n            </div> : <div/>\r\n          } \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        } \r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nconst StockChart = (props) => (\r\n\r\n  <div id=\"chart\" >\r\n    {props.symbol &&\r\n      <div className='chart-widget'>\r\n          <TradingViewWidget\r\n            symbol={props.symbol}\r\n            locale=\"en\"\r\n            autosize\r\n            theme={Themes.DARK}\r\n            interval=\"D\"\r\n            style=\"0\"\r\n            enable_publishing=\"false\"\r\n            hide_legend='true'\r\n            isTransparent= \"true\"\r\n            color=\"#1B1B1D\"\r\n            plotLineColorGrowing= \"rgba(47, 196, 141, 1)\"\r\n            plotLineColorFalling= \"rgba(25, 118, 210, 1)\"\r\n            gridLineColor= \"rgba(42, 46, 57, 1)\"\r\n            scaleFontColor= \"rgba(120, 123, 134, 1)\"\r\n            belowLineFillColorGrowing= \"rgba(33, 150, 243,0.12)\"\r\n            belowLineFillColorFalling= \"rgba(33, 150, 243, 0.12)\"\r\n            symbolActiveColor= \"rgba(33, 150, 243, 0.12)\"\r\n          />\r\n      </div>\r\n    } \r\n  </div>\r\n\r\n);\r\n\r\n*/\r\n\r\n\r\n\r\n/*\r\n\r\nclass StockChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n      }\r\n\r\n\r\n      componentDidMount() {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js'\r\n        script.async = true;\r\n        \r\n        \r\n        script.innerHTML = JSON.stringify({ \r\n            \"colorTheme\": \"dark\",\r\n            \"dateRange\": \"1d\",\r\n            \"showChart\": true,\r\n            \"locale\": \"en\",\r\n            \"largeChartUrl\": \"\",\r\n            \"isTransparent\": true,\r\n            \"width\": \"100%\",\r\n            \"height\": \"400\",\r\n            \"plotLineColorGrowing\": \"rgba(47, 196, 141, 1)\",\r\n            \"plotLineColorFalling\": \"rgba(25, 118, 210, 1)\",\r\n            \"gridLineColor\": \"rgba(42, 46, 57, 1)\",\r\n            \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\r\n            \"belowLineFillColorGrowing\": \"rgba(33, 150, 243, 0.12)\",\r\n            \"belowLineFillColorFalling\": \"rgba(33, 150, 243, 0.12)\",\r\n            \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\",\r\n            \"tabs\": [\r\n                {\r\n                  \"title\": \"Indices\",\r\n                  \"symbols\": [\r\n                    {\r\n                      \"s\": \"NYSE:BABA\",\r\n                      \"d\": \"Alibaba\"\r\n                    }\r\n                  ],\r\n                  \"originalTitle\": \"Indices\"\r\n                }\r\n              ]\r\n        }) \r\n        document.getElementById(\"myContainer\").appendChild(script);\r\n    }\r\n    render() {\r\n        return(\r\n      <div id=\"myContainer\" className=\"stockChart-container\">\r\n        <div className=\"tradingview-widget-container\">\r\n          <div className=\"tradingview-widget-container__widget\">\r\n          </div>\r\n        </div>\r\n     </div>\r\n        );\r\n    }\r\n    }\r\n\r\n*/\r\n\r\n\r\n\r\n\r\nexport default StockChart;","import React from \"react\";\r\n\r\n\r\nconst currentTicker = null\r\n\r\n\r\n\r\nconst Form = props => (\r\n\r\n    <form onSubmit={props.getTicker} className='form-container'>\r\n        \r\n        <input type=\"text\" name=\"ticker\" placeholder=\"Enter Ticker (Ex: AAPL)\" className=\"input-sm\" id={\"input-mode-\"+props.mode}></input>\r\n        <button>+</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import React from 'react'\r\nimport Form from '../Components/Form'\r\n\r\n\r\n\r\n\r\nconst navOn = {\r\n    display: 'block'\r\n}\r\n\r\nconst navOff = {\r\n    display: 'none',\r\n}\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.navToggler = React.createRef();\r\n        this.navToggle = this.navToggle.bind(this);\r\n      }\r\n    \r\n    state = {\r\n        navState : navOff\r\n    }\r\n\r\n    navToggle() {\r\n        if (this.state.navState === navOff){\r\n            this.setState({\r\n            navState : navOn\r\n            })\r\n        } else {\r\n            this.setState({\r\n                navState: navOff\r\n            })\r\n        }\r\n        \r\n        console.log('toggle')\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className={\"navbar\"} id={'nav-'+this.props.mode}> \r\n                    <div className='nav-links'>\r\n                        <header id=\"top\"  className='header'> \r\n                            <a href=\"#article-container-darktop\" className=\"page-title\"> Stock Info   </a>\r\n                        </header>\r\n                        <a id=\"nav-link\" href=\"#chart\" > Chart </a>\r\n                        <a id=\"nav-link\" href=\"#info\" > Info </a>\r\n                        <a id=\"nav-link\" href=\"#news\" > News </a>\r\n                    </div>\r\n        \r\n                    <input type=\"checkbox\" id=\"nav-check\" onClick={this.navToggle} ref={this.navToggler}/> \r\n        \r\n                    <label className=\"burger-label\" for=\"nav-check\" id=\"burger-label\">\r\n                        <img src='https://www.stickpng.com/assets/images/588a6507d06f6719692a2d15.png' className=\"burger\" id={\"burger-\"+this.props.mode} />\r\n                    </label>\r\n        \r\n                    <Form\r\n                        getTicker={this.props.getTicker} \r\n                        mode={this.props.mode}\r\n                    />\r\n        \r\n                </nav>\r\n    \r\n            <div className='navlinksmobilewrapper' style={this.state.navState} id={\"navlinksmobilewrapper-\"+this.props.mode}>\r\n                <div className='nav-links-mobile'>\r\n                    <header id=\"top\"  className='header'> \r\n                        <a href=\"#article-container-darktop\" className=\"page-title\"> Stock Info   </a>\r\n                    </header> \r\n                    <a id=\"nav-link\" href=\"#chart\" > Chart </a>\r\n                    <a id=\"nav-link\" href=\"#info\" > Info </a>\r\n                    <a id=\"nav-link\" href=\"#news\" > News </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*\r\nconst Navbar = (props) => (\r\n    <div>\r\n        <nav className={\"navbar\"} id={'nav-'+props.mode}> \r\n            <div className='nav-links'>\r\n                <header id=\"top\"  className='header'> \r\n                    <a href=\"#article-container-darktop\" className=\"page-title\"> Stock Info   </a>\r\n                </header>\r\n                <a id=\"nav-link\" href=\"#chart\" > Chart </a>\r\n                <a id=\"nav-link\" href=\"#info\" > Info </a>\r\n                <a id=\"nav-link\" href=\"#news\" > News </a>\r\n            </div>\r\n\r\n            <input type=\"checkbox\" id=\"nav-check\" /> \r\n\r\n            <label className=\"burger-label\" for=\"nav-check\" id=\"burger-label\">\r\n                <img src='https://www.stickpng.com/assets/images/588a6507d06f6719692a2d15.png' className=\"burger\" id={\"burger-\"+props.mode} />\r\n            </label>\r\n\r\n            <Form\r\n                getTicker={props.getTicker} \r\n                mode={props.mode}\r\n            />\r\n\r\n        </nav>\r\n\r\n        <div className='nav-links-mobile-wrapper'>\r\n            <div className='nav-links-mobile'>\r\n                <header id=\"top\"  className='header'> \r\n                    <a href=\"#article-container-darktop\" className=\"page-title\"> Stock Info   </a>\r\n                </header> \r\n                <br/>\r\n                <a id=\"nav-link\" href=\"#chart\" > Chart </a>\r\n                <a id=\"nav-link\" href=\"#info\" > Info </a>\r\n                <a id=\"nav-link\" href=\"#news\" > News </a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\n*/\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nconst News = props => (\r\n\r\n\r\n    <div>\r\n        {props.source1 && <div id=\"news\">\r\n        <div className='news' id={'news-'+props.mode}>\r\n            { props.source && <h2 className='section-title' id={'section-title-'+props.mode}>News</h2>}\r\n            { props.source && <div className='news-container'>\r\n                <a className='article-container' id={'article-container-'+props.mode} href={props.url} target=\"_blank\">\r\n                    { props.source && <p className=\"article-source\"> { props.source } </p> }\r\n                    { props.title && <p className=\"article-title\"> { props.title } </p> }\r\n                    <div className='article-info'>\r\n                        { props.description && <p className=\"article\"> { props.description } </p> }\r\n                    </div>\r\n                </a>\r\n                <a className='article-container' id={'article-container-'+props.mode} href={props.url1} target=\"_blank\">\r\n                    { props.source1 && <p className=\"article-source\"> { props.source1 } </p> }\r\n                    { props.title1 && <p className=\"article-title\"> { props.title1 } </p> }\r\n                    <div className='article-info'> \r\n                        { props.description1 && <p className=\"article\"> { props.description1 } </p> }\r\n                    </div>\r\n                </a>\r\n                <a className='article-container' id={'article-container-'+props.mode} href={props.url2} target=\"_blank\">\r\n                    { props.source2 && <p className=\"article-source\"> { props.source2 } </p> }\r\n                    { props.title2 && <p className=\"article-title\"> { props.title2 } </p> }\r\n                    <div className='article-info'> \r\n                        { props.description2 && <p className=\"article\"> { props.description2 } </p> }\r\n                    </div>\r\n                </a>\r\n                <a className='article-container' id={'article-container-'+props.mode} href={props.url3} target=\"_blank\">\r\n                    { props.source3 && <p className=\"article-source\"> { props.source3 } </p> }\r\n                    { props.title3 && <p className=\"article-title\"> { props.title3 } </p> }\r\n                    <div className='article-info'> \r\n                        { props.description3 && <p className=\"article\"> { props.description3 } </p> }\r\n                    </div>\r\n                </a>\r\n                <a className='article-container' id={'article-container-'+props.mode} href={props.url4} target=\"_blank\">\r\n                    { props.source4 && <p className=\"article-source\"> { props.source4 } </p> }\r\n                    { props.title4 && <p className=\"article-title\"> { props.title4 } </p> }\r\n                    <div className='article-info'> \r\n                        { props.description4 && <p className=\"article\"> { props.description4 } </p> }\r\n                    </div>    \r\n                </a>\r\n            </div> }\r\n            </div>\r\n        </div>  }\r\n    </div>\r\n);\r\n\r\n\r\nexport default News;","import React from 'react'\r\n\r\n\r\nconst StockTitle = props => (\r\n    <div className='price-bar' id={'price-bar-'+props.mode}>\r\n\r\n        {props.symbol && <div>\r\n            <div className=\"tickerMain\" id={'tickerMain-'+props.mode}> {props.symbol} </div>\r\n            <div className='stock-name' id={\"stock-name-\"+props.mode}> {props.name}</div>\r\n            <div className={ props.price > props.closeYesterday ? 'stock_price_postiive' : 'stock_price_negative' }> {props.price && <span>$</span>}{props.price} </div>\r\n\r\n            <div className=\"todayPrice\" id={'todayPrice-'+props.mode}>\r\n                {props.daychange && \r\n                <p > Today:  <span className={props.changepct > 0 ? 'smallpos' : 'smallneg'}>{props.daychange > 0 ? \"+$\": \"$\"} \r\n                {props.daychange}</span> (\r\n                <span className={props.changepct > 0 ? 'smallpos' : 'smallneg'}>{props.changepct > 0 ?\"+\": \"\"}{props.changepct}%</span>)</p> \r\n                }\r\n            </div>\r\n        </div> }\r\n    </div>\r\n\r\n)\r\n\r\nexport default StockTitle","import React from 'react';\r\n\r\n\r\n\r\nconst ModeChanger = (props) => (\r\n    <div className='checkbox-container'>\r\n        <div className=\"mode-switch-container-desktop\">\r\n            <input type='checkbox' id='mode-switch' onChange={props.changeMode} ref={props.modeChanger}/> \r\n            <label for='mode-switch' className='toggle'>\r\n                <div className='toggle-image'></div>\r\n                <div className='toggle-text'>\r\n                    <div className='toggle-image-dark'></div>\r\n                    <p className='toggle-text-dark'>Light</p>\r\n                    <p className='toggle-text-light'>Dark</p>\r\n                </div>\r\n            </label>\r\n        </div>\r\n\r\n        <div className=\"mode-switch-container-mobile\" >\r\n            <input type='checkbox' id='mode-switch-mobile' onChange={props.changeMode} ref={props.modeChanger}/> \r\n            <label for='mode-switch-mobile' className='toggle-mobile'>\r\n                <img src='https://simpleicon.com/wp-content/uploads/sun.png' id='img-sun'/>\r\n                <img src='https://static.thenounproject.com/png/595-200.png' id='img-moon' />\r\n            </label>\r\n\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\n\r\nexport default ModeChanger","import React from 'react';\r\n\r\nimport { TradingViewEmbed, widgetType } from \"react-tradingview-embed\";\r\n\r\nconst Footer = (props) => (\r\n    <div className=\"ticker-tape\" >\r\n        <div className={\"ticker-tape-\" + props.mode}>\r\n            {props.mode === 'light' &&\r\n            <TradingViewEmbed\r\n            widgetType={widgetType.TICKER_TAPE}\r\n            widgetConfig={{\r\n            \"symbols\": [\r\n                {\r\n                \"proName\": \"OANDA:SPX500USD\",\r\n                \"title\": \"S&P 500\"\r\n                },\r\n                {\r\n                \"proName\": \"OANDA:NAS100USD\",\r\n                \"title\": \"Nasdaq 100\"\r\n                },\r\n                {\r\n                \"proName\": \"FX_IDC:EURUSD\",\r\n                \"title\": \"EUR/USD\"\r\n                },\r\n                {\r\n                \"proName\": \"BITSTAMP:BTCUSD\",\r\n                \"title\": \"BTC/USD\"\r\n                },\r\n                {\r\n                \"proName\": \"BITSTAMP:ETHUSD\",\r\n                \"title\": \"ETH/USD\"\r\n                }\r\n            ],\r\n            \"colorTheme\": \"light\",\r\n            \"dateRange\": \"1d\",\r\n            \"locale\": \"en\",\r\n            \"largeChartUrl\": \"\",\r\n            \"isTransparent\": true,\r\n            \"width\": \"100%\",\r\n            \"hide_legend\": true,\r\n            \"displayMode\": \"regular\"\r\n            }}\r\n          />\r\n        }\r\n        {props.mode === 'dark' &&\r\n          <TradingViewEmbed\r\n            widgetType={widgetType.TICKER_TAPE}\r\n            widgetConfig={\r\n                {\r\n                    \"symbols\": [\r\n                        {\r\n                        \"proName\": \"OANDA:SPX500USD\",\r\n                        \"title\": \"S&P 500\"\r\n                        },\r\n                        {\r\n                        \"proName\": \"OANDA:NAS100USD\",\r\n                        \"title\": \"Nasdaq 100\"\r\n                        },\r\n                        {\r\n                        \"proName\": \"FX_IDC:EURUSD\",\r\n                        \"title\": \"EUR/USD\"\r\n                        },\r\n                        {\r\n                        \"proName\": \"BITSTAMP:BTCUSD\",\r\n                        \"title\": \"BTC/USD\"\r\n                        },\r\n                        {\r\n                        \"proName\": \"BITSTAMP:ETHUSD\",\r\n                        \"title\": \"ETH/USD\"\r\n                        }\r\n                    ],\r\n                    \"colorTheme\": \"dark\",\r\n                    \"isTransparent\": true,\r\n                    \"displayMode\": \"regular\",\r\n                    \"locale\": \"en\",\r\n                    \"hide_legend\": true,\r\n                    \"show_popup_button\": false,\r\n                    \"hide_top_toolbar\": true,\r\n                    \"largeChartUrl\": \"\",\r\n                    \"height\": \"90\"\r\n                }\r\n          }\r\n          />\r\n        }\r\n  \r\n  \r\n  \r\n        </div>\r\n      \r\n    </div>\r\n  \r\n  );\r\n\r\n\r\n\r\n/*\r\nclass Footer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\r\n        script.async = true;\r\n        script.innerHTML = JSON.stringify({ \r\n            \"colorTheme\": \"light\",\r\n            \"dateRange\": \"1d\",\r\n            \"locale\": \"en\",\r\n            \"largeChartUrl\": \"\",\r\n            \"isTransparent\": true,\r\n            \"width\": \"100%\",\r\n            \"hide_legend\": true,\r\n            \"displayMode\": \"regular\"\r\n        }) \r\n\r\n        document.getElementById(\"tickerContainer\").appendChild(script);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"tickerContainer\" className={\"ticker-tape-\" + this.props.mode}>\r\n                <div className=\"tradingview-widget-container\">\r\n                    <div className=\"tradingview-widget-container__widget\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Enter = (props) => (\r\n\r\n    <div>\r\n        {props.error !== \"valid\" ? (\r\n            <div className=\"enter-wrapper\">\r\n                {props.error === undefined &&\r\n                <div className=\"enter\"> \r\n                    <div className={\"enter-\"+props.mode}>\r\n                        <h1 > Enter a Ticker </h1>  \r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n                {props.error !== \"valid\" ? (\r\n                <div className=\"enter\"> \r\n                    <div className={\"enter-\"+props.mode}>\r\n                        <h2> {props.error} </h2>  \r\n                    </div>\r\n                </div> ) : (\r\n                    <div /> \r\n                )\r\n                }\r\n            </div>\r\n        ) : <div/>\r\n        }\r\n    </div>    \r\n)\r\n\r\n\r\n\r\nexport default Enter;","import React from 'react';\r\n\r\n\r\n\r\nimport { TradingViewEmbed, widgetType } from \"react-tradingview-embed\";\r\n\r\nconst Profile = (props) => (\r\n\r\n\r\n    <div className='profile-wrapper'>\r\n        { props.name && <h2 className='section-title' id={'section-title-'+props.mode}>Profile</h2>}\r\n\r\n        {props.name &&\r\n            <div id=\"profile\" className=\"profile\">\r\n            {props.symbol &&\r\n            <div className='profile-widget'>\r\n                {props.mode === 'light' &&\r\n                <TradingViewEmbed\r\n                widgetType={widgetType.COMPANY_PROFILE}\r\n                widgetConfig={\r\n                    {\r\n                        \"symbol\": props.symbol,\r\n                        \"width\": \"100%\",\r\n                        \"height\": \"350\",\r\n                        \"colorTheme\": \"light\",\r\n                        \"isTransparent\": true,\r\n                        \"locale\": \"en\"\r\n                    }\r\n                }\r\n                />\r\n            }\r\n            {props.mode === 'dark' &&\r\n                <div className='profile-widget'>\r\n\r\n                <TradingViewEmbed\r\n                widgetType={widgetType.COMPANY_PROFILE}\r\n                widgetConfig={\r\n                    {\r\n                        \"symbol\": props.symbol,\r\n                        \"width\": \"100%\",\r\n                        \"height\": \"350\",\r\n                        \"colorTheme\": \"dark\",\r\n                        \"isTransparent\": true,\r\n                        \"locale\": \"en\"\r\n                    }\r\n\r\n                }\r\n                />\r\n                </div>\r\n            }\r\n            </div>\r\n            } \r\n            </div>\r\n        }\r\n\r\n    </div>\r\n);\r\n\r\n\r\nexport default Profile","import React from \"react\";\n\nimport StockData from \"./Components/StockData\";\nimport StockChart from \"./Components/StockChart\";\nimport Navbar from \"./Components/NavBar\";\nimport News from \"./Components/News\";\nimport StockTitle from \"./Components/StockTitle\";\nimport ModeChanger from './Components/ModeChange';\nimport Footer from './Components/Footer';\nimport Enter from './Components/Enter';\nimport Profile from './Components/Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst WORLDTRADINGDATA_API_KEY = \"2HhczAOftfU2TiYMAJepZcz5JrUVOVGlpLleKt9ZnGlyKvokZniHKmmBDvYD\";\nconst WORLDTRADINGDATA_API_KEY2 = \"C7pRFbXZRf9nVgqvcoGzdKfsR0zex2TsoR9tJ1Qlimo6NbYitsBOrOjJU4DS\";\nconst NEWS_API_KEY = \"51cbba44e78c467ba6c8352767d4e971\"\nconst ALPHAVANTAGE_API_Key = \"O11EQ8J01EQY0UZ1\"\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.modeChanger = React.createRef();\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  state = {\n    name: undefined,\n    symbol: undefined,\n    price: undefined,\n    closeYesterday: undefined,\n    pe: undefined,\n    yearHigh: undefined,\n    yearLow: undefined,\n    exchange: undefined,\n    daychange: undefined,\n    changepct: undefined,\n    open: undefined,\n    dayHigh: undefined,\n    dayLow: undefined,\n    mktCap:undefined,\n    avgVol:undefined,\n    eps:undefined,\n    error: undefined,\n\n    source: undefined,\n    title: undefined,\n    url: undefined,\n    image: undefined,\n    description: undefined,\n\n    source1: undefined,\n    title1: undefined,\n    url1: undefined,\n    image1: undefined,\n    description1: undefined,\n\n    source2: undefined,\n    title2: undefined,\n    url2: undefined,\n    image2: undefined,\n    description2: undefined,\n\n    source3: undefined,\n    title3: undefined,\n    url3: undefined,\n    image3: undefined,\n    description3: undefined,\n\n    source4: undefined,\n    title4: undefined,\n    url4: undefined,\n    image4: undefined,\n    description4: undefined,\n\n    mode: 'light',\n    bg: {\n      backgroundColor: \"white\"\n    },\n\n    toggle: 'N'\n\n  }\n\n  getTicker = async (e) => {\n    e.preventDefault();\n    const ticker = e.target.elements.ticker.value;\n    const api_call = await fetch(`https://api.worldtradingdata.com/api/v1/stock?symbol=${ticker}&api_token=${WORLDTRADINGDATA_API_KEY}`);\n    const api_call2 = await fetch(`https://newsapi.org/v2/everything?q=${ticker}&apiKey=${NEWS_API_KEY}`);\n    const data = await api_call.json();\n    const data2 = await api_call2.json();\n\n    if (ticker) {\n      if (data[\"Message\"] == \"Error! The requested stock(s) could not be found.\") {\n        this.setState({\n          name: undefined,\n          symbol: undefined,\n          price: undefined,\n          closeYesterday: undefined,\n          pe: undefined,\n          yearHigh: undefined,\n          yearLow: undefined,\n          exchange: undefined,\n          daychange: undefined,\n          changepct: undefined,\n          open: undefined,\n          dayHigh: undefined,\n          dayLow: undefined,\n          mktCap:undefined,\n          avgVol:undefined,\n          eps:undefined,\n          error: \"Enter valid ticker\"\n        });\n    } else {\n        this.setState({\n          name: data.data[0].name,\n          symbol: data.data[0].symbol,\n          price: data.data[0].price,\n          closeYesterday: data.data[0][\"close_yesterday\"],\n          pe: data.data[0].pe,\n          yearHigh: data.data[0][\"52_week_high\"],\n          yearLow: data.data[0][\"52_week_low\"],\n          exchange: data.data[0][\"stock_exchange_short\"],\n          daychange: data.data[0][\"day_change\"],\n          changepct: data.data[0][\"change_pct\"],\n          open: data.data[0][\"price_open\"],\n          dayHigh: data.data[0][\"day_high\"],\n          dayLow: data.data[0][\"day_low\"],\n          mktCap: data.data[0][\"market_cap\"],\n          avgVol: data.data[0][\"volume_avg\"],\n          eps: data.data[0][\"eps\"],\n          error: \"valid\"\n        });\n      }\n    }\n\n    if (ticker) {\n      if (data[\"Message\"] == \"Error! The requested stock(s) could not be found.\") {\n        this.setState({\n\n          source: undefined,\n          title: undefined,\n          url: undefined,\n          image: undefined,\n          description: undefined,\n          content: undefined,\n          source1: undefined,\n          title1: undefined,\n          url1: undefined,\n          image1: undefined,\n          description1: undefined,\n          source2: undefined,\n          title2: undefined,\n          url2: undefined,\n          image2: undefined,\n          description2: undefined,\n      \n          source3: undefined,\n          title3: undefined,\n          url3: undefined,\n          image3: undefined,\n          description3: undefined,\n      \n          source4: undefined,\n          title4: undefined,\n          url4: undefined,\n          image4: undefined,\n          description4: undefined,\n        });\n    } else {\n        this.setState({\n            source: data2.articles[0][\"source\"].name,\n            title: data2.articles[0].title,\n            url: data2.articles[0].url,\n            image: data2.articles[0].urlToImage,\n            description: data2.articles[0].description,\n            source1: data2.articles[1][\"source\"].name,\n            title1: data2.articles[1].title,\n            url1: data2.articles[1].url,\n            image1: data2.articles[1].urlToImage,\n            description1: data2.articles[1].description,\n            source2: data2.articles[2][\"source\"].name,\n            title2: data2.articles[2].title,\n            url2: data2.articles[2].url,\n            image2: data2.articles[2].urlToImage,\n            description2: data2.articles[2].description,\n            source3: data2.articles[3][\"source\"].name,\n            title3: data2.articles[3].title,\n            url3: data2.articles[3].url,\n            image3: data2.articles[3].urlToImage,\n            description3: data2.articles[3].description,\n            source4: data2.articles[4][\"source\"].name,\n            title4: data2.articles[4].title,\n            url4: data2.articles[4].url,\n            image4: data2.articles[4].urlToImage,\n            description4: data2.articles[4].description,\n        });\n      }\n    } else {\n      this.setState({\n        source: undefined,\n        title: undefined,\n        url: undefined,\n        image: undefined,\n        description: undefined,\n        content: undefined,\n        source1: undefined,\n        title1: undefined,\n        url1: undefined,\n        image1: undefined,\n        description1: undefined,\n        source2: undefined,\n        title2: undefined,\n        url2: undefined,\n        image2: undefined,\n        description2: undefined,\n    \n        source3: undefined,\n        title3: undefined,\n        url3: undefined,\n        image3: undefined,\n        description3: undefined,\n    \n        source4: undefined,\n        title4: undefined,\n        url4: undefined,\n        image4: undefined,\n        description4: undefined,\n      });\n    }\n\n    if (data[\"Message\"] == \"Error! The requested stock(s) could not be found.\") {\n      this.setState({\n        name: undefined,\n        symbol: undefined,\n        price: undefined,\n        closeYesterday: undefined,\n        pe: undefined,\n        yearHigh: undefined,\n        yearLow: undefined,\n        exchange: undefined,\n        daychange: undefined,\n        changepct: undefined,\n        error: \"Please enter valid ticker\"\n      });\n    }\n\n    if (this.state.toggle === \"N\") {\n      this.setState({\n        toggle: \"Y\"\n      })\n    } else {\n      this.setState({\n        toggle: \"N\"\n      })\n    }\n  }\n\n  changeMode({ target }) {\n    const mode= target.checked ? 'dark' : 'light';\n\n    this.setState({\n      mode : mode\n    });\n\n    const background = target.checked ? {backgroundColor: \"#1B1B1D\"} : {backgroundColor: \"white\"};\n\n    this.setState ({\n      bg: background\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\" style={this.state.bg}>\n        <div className='wrapper' id={'wrapper-'+this.state.mode}>\n\n          <Navbar\n            changeMode={this.changeMode}\n            modeChanger={this.modeChanger}\n            mode={this.state.mode}\n            getTicker={this.getTicker} \n            mode={this.state.mode}\n          />\n          \n          <ModeChanger\n            changeMode={this.changeMode}\n            modeChanger={this.modeChanger}\n            mode={this.state.mode}\n          />\n\n          <Footer\n            mode={this.state.mode}\n          />\n\n          <div className=\"main\">\n            <Enter\n              name={this.state.name}\n              mode={this.state.mode}\n              ticker={this.getTicker}\n              error={this.state.error}\n            />\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col\">\n                <StockTitle \n                  mode={this.state.mode}\n                  getTicker={this.getTicker}\n                  name={this.state.name} \n                  symbol={this.state.symbol}\n                  price={this.state.price}\n                  closeYesterday={this.state.closeYesterday}\n                  pe={this.state.pe}\n                  yearHigh={this.state.yearHigh}\n                  yearLow={this.state.yearLow}\n                  exchange={this.state.exchange}\n                  daychange={this.state.daychange}\n                  changepct={this.state.changepct}\n                  error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col\">\n                <StockChart\n                  mode={this.state.mode}\n                  getTicker={this.getTicker}\n                  symbol={this.state.symbol}\n                  toggle={this.state.toggle}\n                />\n                </div>\n              </div>\n            </div>\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col\">\n                <StockData\n                  mode={this.state.mode}\n                  getTicker={this.getTicker}\n                  name={this.state.name} \n                  symbol={this.state.symbol}\n                  price={this.state.price}\n                  closeYesterday={this.state.closeYesterday}\n                  pe={this.state.pe}\n                  yearHigh={this.state.yearHigh}\n                  yearLow={this.state.yearLow}\n                  exchange={this.state.exchange}\n                  daychange={this.state.daychange}\n                  changepct={this.state.changepct}\n                  open= {this.state.open}\n                  dayHigh= {this.state.dayHigh}\n                  dayLow= {this.state.dayLow}\n                  mktCap= {this.state.mktCap}\n                  avgVol= {this.state.avgVol}\n                  eps= {this.state.eps}\n                  toggle={this.state.toggle}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col\">\n                <Profile\n                  mode={this.state.mode}\n                  getTicker={this.getTicker}\n                  name={this.state.name} \n                  symbol={this.state.symbol}\n                  price={this.state.price}\n                  closeYesterday={this.state.closeYesterday}\n                  pe={this.state.pe}\n                  yearHigh={this.state.yearHigh}\n                  yearLow={this.state.yearLow}\n                  exchange={this.state.exchange}\n                  daychange={this.state.daychange}\n                  changepct={this.state.changepct}\n                  open= {this.state.open}\n                  dayHigh= {this.state.dayHigh}\n                  dayLow= {this.state.dayLow}\n                  mktCap= {this.state.mktCap}\n                  avgVol= {this.state.avgVol}\n                  eps= {this.state.eps}\n                  />\n                </div>\n              </div>\n            </div>\n\n\n\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col\">\n                <News\n                  mode={this.state.mode}\n                  getTicker={this.getTicker}\n                  source={this.state.source}\n                  title={this.state.title}\n                  url={this.state.url}\n                  image={this.state.image}\n                  description={this.state.description}\n                  source1={this.state.source1}\n                  title1={this.state.title1}\n                  url1={this.state.url1}\n                  image1={this.state.image1}\n                  description1={this.state.description1}\n                  source2={this.state.source2}\n                  title2={this.state.title2}\n                  url2={this.state.url2}\n                  image2={this.state.image2}\n                  description2={this.state.description2}\n                  source3={this.state.source3}\n                  title3={this.state.title3}\n                  url3={this.state.url3}\n                  image3={this.state.image3}\n                  description3={this.state.description3}\n                  source4={this.state.source4}\n                  title4={this.state.title4}\n                  url4={this.state.url4}\n                  image4={this.state.image4}\n                  description4={this.state.description4}\n                />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}